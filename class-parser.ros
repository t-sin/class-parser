#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  ;;#+quicklisp (ql:quickload '() :silent t)
  )

(defun read-u4 (stream)
  (let (bytes)
    (dotimes (n 4)
      (push (read-byte stream nil :eof) bytes))
    (nreverse bytes)))

(defun read-u2 (stream)
  (let (bytes)
    (dotimes (n 2)
      (push (read-byte stream nil :eof) bytes))
    (nreverse bytes)))

(defun as-integer (bytes)
  (let ((i 0))
    (print bytes)
    (dotimes (n (length bytes) i)
      (let ((offset (* n 8)))
        (print (nth n bytes))
        (setf (ldb (byte 8 offset) i) (nth (- (length bytes) n 1) bytes))))))

(defun read-magic (stream)
  (let ((bytes (read-u4 stream)))
    (values bytes (and (every (lambda (e) (typep e '(unsigned-byte 8))) bytes)
                       (loop
                         :for b1 :in bytes
                         :for b2 :in '(#xCA #xFE #xBA #xBE)
                         :always (= b1 b2))))))

(defun read-version (stream)
  (let ((minor-ver (as-integer (read-u2 stream)))
        (major-ver (as-integer (read-u2 stream))))
    (cons major-ver minor-ver)))

(defpackage :ros.script.class-parser.3733376269
  (:use :cl))
(in-package :ros.script.class-parser.3733376269)

(defun main (&rest argv)
  (declare (ignorable argv)))
;;; vim: set ft=lisp lisp:
